AWSTemplateFormatVersion: '2010-09-09'
Description: Unicorn Stats API infrastructure 

Resources:
  UnicornStatsApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: REST API for Unicorn Stats
      EndpointConfiguration:
        Types:
          - EDGE
      Name: mock-api

  WellKnownResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt UnicornStatsApi.RootResourceId
      PathPart: '.well-known'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  UnicornsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt UnicornStatsApi.RootResourceId
      PathPart: 'unicorns'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  SingleUnicornResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref UnicornsResource
      PathPart: '{unicorn-id}'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  GetUnicornsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        IntegrationResponses:
          - ResponseTemplates:
              application/json: "{\"message\": \"OK\"}"
            SelectionPattern: '2\d{2}'
            StatusCode: 200
          - ResponseTemplates:
              application/json: "{\"message\": \"Internal Server Error\"}"
            SelectionPattern: '5\d{2}'
            StatusCode: 500
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: "{\"statusCode\": 200}"
        Type: MOCK
        TimeoutInMillis: 29000
      MethodResponses:
        - ResponseModels:
            application/json: !Ref ApiGatewayModel
          StatusCode: 200
        - ResponseModels:
            application/json: !Ref ApiGatewayModel
          StatusCode: 500
      OperationName: GetUnicorns
      ResourceId: !Ref UnicornsResource
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  GetSingleUnicornMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        IntegrationResponses:
          - ResponseTemplates:
              application/json: "{\"unicornName\": \"Amalthea\", \"unicornId\": \"1111-1111-1111\", \"unicornClass\": \"Ethereal\"}"
            SelectionPattern: '2\d{2}'
            StatusCode: 200
          - ResponseTemplates:
              application/json: "{\"message\": \"Internal Server Error\"}"
            SelectionPattern: '5\d{2}'
            StatusCode: 500
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: "{\"statusCode\": 200}"
        Type: MOCK
        TimeoutInMillis: 29000
      MethodResponses:
        - ResponseModels:
            application/json: !Ref UnicornModel
          StatusCode: 200
          ResponseParameters:
            method.response.header.Content-Type: "application/json"
        - ResponseModels:
            application/json: !Ref UnicornModel
          StatusCode: 500
      OperationName: GetUnicornById
      ResourceId: !Ref SingleUnicornResource
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  AIPluginResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref WellKnownResource
      PathPart: 'ai-plugin.json'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  PluginResponseMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      # ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        ConnectionType: INTERNET #Default
        IntegrationResponses:
          - ResponseTemplates:
              application/json: |
                {
                    "schema_version": "v1",
                    "name_for_human": "TODO List (No Auth)",
                    "name_for_model": "todo",
                    "description_for_human": "Manage your TODO list. You can add, remove and view your TODOs.",
                    "description_for_model": "Plugin for managing a TODO list, you can add, remove and view your TODOs.",
                    "auth": {
                        "type": "none"
                    },
                    "api": {
                        "type": "openapi",
                        "url": "PLUGIN_HOSTNAME/openapi.yaml"
                    },
                    "logo_url": "PLUGIN_HOSTNAME/logo.png",
                    "contact_email": "support@example.com",
                    "legal_info_url": "https://example.com/legal"
                }
            SelectionPattern: '2\d{2}'
            StatusCode: 200
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: "{\"statusCode\": 200}"
        Type: MOCK
        TimeoutInMillis: 29000
      MethodResponses:
        - ResponseModels:
            application/json: !Ref ApiGatewayModel
          StatusCode: 200
          ResponseParameters:
            method.response.header.Content-Type: "application/json"
      OperationName: 'PluginResponse'
      ResourceId: !Ref AIPluginResource
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

  ApiGatewayModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId
      Schema: {}

  UnicornModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !GetAtt UnicornStatsApi.RestApiId
      Name: UnicornModel
      Schema: {
        "title": "Unicorn",
        "type": "object",
        "properties": {
          "unicornName": {
            "type": "string",
            "description": "The unicorn's name."
          },
          "unicornId": {
            "type": "string",
            "description": "The unicorn's ID number."
          },
          "unicornClass": {
            "type": "string",
            "description": "The type of Unicorn."
          }
        }
      }

  ApiGatewayProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      Description: Prod
      DeploymentId: !GetAtt PLACEHOLDER_ApiGatewayDeployment_PlACEHOLDER.DeploymentId
      RestApiId: !GetAtt UnicornStatsApi.RestApiId
      StageName: Prod

  PLACEHOLDER_ApiGatewayDeployment_PlACEHOLDER:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
     - GetSingleUnicornMethod
     - GetUnicornsMethod
     - PluginResponseMethod
    Properties:
      Description: Mock API Deployment
      RestApiId: !GetAtt UnicornStatsApi.RestApiId

Outputs:
  UnicornStatsApiId:
    Description: Logical ID for the REST API
    Value: !GetAtt UnicornStatsApi.RestApiId
  UnicornStatsStageName:
    Description: Stage Name for the currently deployd REST API
    Value: !Ref ApiGatewayProdStage